{"ast":null,"code":"var _jsxFileName = \"/Users/jwoonk/GIT/React-Redux-App/react-redux-app/src/components/ProgrammingQuotes.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport \"./ProgrammingQuotes.css\";\nimport { fetchQuote } from '../store/actions/quoteActions';\n\nconst ProgrammingQuotes = props => {\n  useEffect(() => {\n    // call an action creator\n    console.log(props.fetchQuote);\n    props.fetchQuote();\n  }, []); // if (props.isFetching) {\n  //   return <Loader />;\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Programming Quotes \\uD83C\\uDF99\"), props.isFetching && /*#__PURE__*/React.createElement(Loader, {\n    type: \"Puff\",\n    color: \"#00BFFF\",\n    height: 100,\n    width: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), props.quote && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }\n  }, \"\\\"\", props.quote, \"\\\"\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }\n  }, props.author)), props.error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }\n  }, props.error), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.fetchQuote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Fetch a new quote\"));\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    quote: state.quotes.quote,\n    isFetching: state.quotes.isFetching,\n    error: state.quotes.error,\n    author: state.quotes.author\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchQuote\n})(ProgrammingQuotes);","map":{"version":3,"sources":["/Users/jwoonk/GIT/React-Redux-App/react-redux-app/src/components/ProgrammingQuotes.js"],"names":["React","useEffect","connect","Loader","fetchQuote","ProgrammingQuotes","props","console","log","isFetching","quote","author","error","mapStateToProps","state","quotes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,yBAAP;AAEA,SAASC,UAAT,QAA2B,+BAA3B;;AAEA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AACjCL,EAAAA,SAAS,CAAC,MAAM;AACd;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,UAAlB;AACAE,IAAAA,KAAK,CAACF,UAAN;AAED,GALQ,EAKN,EALM,CAAT,CADiC,CAQjC;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEGE,KAAK,CAACG,UAAN,iBACC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,KAAK,EAAC,SAA1B;AAAoC,IAAA,MAAM,EAAE,GAA5C;AAAiD,IAAA,KAAK,EAAE,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAKGH,KAAK,CAACI,KAAN,iBAAc;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMJ,KAAK,CAACI,KAAZ,OADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAK,CAACK,MAAX,CAHD,CALjB,EAUGL,KAAK,CAACM,KAAN,iBAAe;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBN,KAAK,CAACM,KAA5B,CAVlB,eAWE;AAAQ,IAAA,OAAO,EAAEN,KAAK,CAACF,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAXF,CADF;AAeD,CA3BD;;AA6BA,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAC/BP,EAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,SAAO;AACLJ,IAAAA,KAAK,EAAEI,KAAK,CAACC,MAAN,CAAaL,KADf;AAELD,IAAAA,UAAU,EAAEK,KAAK,CAACC,MAAN,CAAaN,UAFpB;AAGLG,IAAAA,KAAK,EAAEE,KAAK,CAACC,MAAN,CAAaH,KAHf;AAILD,IAAAA,MAAM,EAACG,KAAK,CAACC,MAAN,CAAaJ;AAJf,GAAP;AAMD,CARD;;AAUA,eAAeT,OAAO,CACpBW,eADoB,EAEpB;AAAET,EAAAA;AAAF,CAFoB,CAAP,CAGbC,iBAHa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport \"./ProgrammingQuotes.css\"\n\nimport { fetchQuote } from '../store/actions/quoteActions';\n\nconst ProgrammingQuotes = props => {\n  useEffect(() => {\n    // call an action creator\n    console.log(props.fetchQuote)\n    props.fetchQuote();\n    \n  }, []);\n\n  // if (props.isFetching) {\n  //   return <Loader />;\n  // }\n\n  return (\n    <div className=\"container\">\n      <h1>Programming Quotes ðŸŽ™</h1>\n      {props.isFetching && (\n        <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\n      )}\n      {props.quote &&<div className=\"text\">\n                      <h3>\"{props.quote}\"</h3>\n                      <br/>\n                      <h4>{props.author}</h4>\n                     </div>}\n      {props.error && <p className=\"error\">{props.error}</p>}\n      <button onClick={props.fetchQuote}>Fetch a new quote</button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    quote: state.quotes.quote,\n    isFetching: state.quotes.isFetching,\n    error: state.quotes.error,\n    author:state.quotes.author\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchQuote }\n)(ProgrammingQuotes);\n"]},"metadata":{},"sourceType":"module"}