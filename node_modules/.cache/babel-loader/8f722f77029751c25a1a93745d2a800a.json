{"ast":null,"code":"var _jsxFileName = \"/Users/jwoonk/GIT/React-Redux-App/react-redux-app/src/components/CatFact.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport { fetchQuote } from '../store/actions/quoteActions';\n\nconst ProgrammingQuotes = props => {\n  useEffect(() => {\n    // call an action creator\n    props.fetchQuote();\n    console.log(props.fetchQuote);\n  }, []); // if (props.isFetching) {\n  //   return <Loader />;\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Programming Quotes \\uD83C\\uDF99\"), props.isFetching && /*#__PURE__*/React.createElement(Loader, {\n    type: \"Puff\",\n    color: \"#00BFFF\",\n    height: 100,\n    width: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), props.quote && /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }\n  }, \"\\\"\", props.quote, \"\\\"\"), props.error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }\n  }, props.error), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.fetchQuote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Fetch a new quote\"));\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    quote: state.quotes.quote,\n    isFetching: state.quotes.isFetching,\n    error: state.quotes.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchQuote\n})(CatFact);","map":{"version":3,"sources":["/Users/jwoonk/GIT/React-Redux-App/react-redux-app/src/components/CatFact.js"],"names":["React","useEffect","connect","Loader","fetchQuote","ProgrammingQuotes","props","console","log","isFetching","quote","error","mapStateToProps","state","quotes","CatFact"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,UAAT,QAA2B,+BAA3B;;AAEA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AACjCL,EAAAA,SAAS,CAAC,MAAM;AACd;AACAK,IAAAA,KAAK,CAACF,UAAN;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,UAAlB;AACD,GAJQ,EAIN,EAJM,CAAT,CADiC,CAOjC;AACA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEGE,KAAK,CAACG,UAAN,iBACC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,KAAK,EAAC,SAA1B;AAAoC,IAAA,MAAM,EAAE,GAA5C;AAAiD,IAAA,KAAK,EAAE,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAKGH,KAAK,CAACI,KAAN,iBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMJ,KAAK,CAACI,KAAZ,OALlB,EAMGJ,KAAK,CAACK,KAAN,iBAAe;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBL,KAAK,CAACK,KAA5B,CANlB,eAOE;AAAQ,IAAA,OAAO,EAAEL,KAAK,CAACF,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPF,CADF;AAWD,CAtBD;;AAwBA,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC/BN,EAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACA,SAAO;AACLH,IAAAA,KAAK,EAAEG,KAAK,CAACC,MAAN,CAAaJ,KADf;AAELD,IAAAA,UAAU,EAAEI,KAAK,CAACC,MAAN,CAAaL,UAFpB;AAGLE,IAAAA,KAAK,EAAEE,KAAK,CAACC,MAAN,CAAaH;AAHf,GAAP;AAKD,CAPD;;AASA,eAAeT,OAAO,CACpBU,eADoB,EAEpB;AAAER,EAAAA;AAAF,CAFoB,CAAP,CAGbW,OAHa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Loader from 'react-loader-spinner';\n\nimport { fetchQuote } from '../store/actions/quoteActions';\n\nconst ProgrammingQuotes = props => {\n  useEffect(() => {\n    // call an action creator\n    props.fetchQuote();\n    console.log(props.fetchQuote)\n  }, []);\n\n  // if (props.isFetching) {\n  //   return <Loader />;\n  // }\n\n  return (\n    <div>\n      <h1>Programming Quotes ðŸŽ™</h1>\n      {props.isFetching && (\n        <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\n      )}\n      {props.quote && <h3>\"{props.quote}\"</h3>}\n      {props.error && <p className=\"error\">{props.error}</p>}\n      <button onClick={props.fetchQuote}>Fetch a new quote</button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    quote: state.quotes.quote,\n    isFetching: state.quotes.isFetching,\n    error: state.quotes.error\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchQuote }\n)(CatFact);\n"]},"metadata":{},"sourceType":"module"}