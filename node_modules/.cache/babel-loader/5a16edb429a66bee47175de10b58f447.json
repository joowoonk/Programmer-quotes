{"ast":null,"code":"const initialState = {\n  quote: '',\n  isFetching: false,\n  error: '',\n  author: ''\n};\nexport const quotesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_QUOTE_START':\n      return { ...state,\n        isFetching: true\n      };\n\n    case 'FETCH_QUOTE_SUCCESS':\n      console.log(\"action.payload\", action.payload);\n      const ranNum = Math.floor(Math.random() * (500 - 0)) + 0;\n      return { ...state,\n        isFetching: false,\n        author: action.payload.data[ranNum].author,\n        quote: action.payload.data[ranNum].en,\n        error: ''\n      };\n\n    case 'FETCH_QUOTE_FAILURE':\n      return { ...state,\n        isFetching: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/jwoonk/GIT/React-Redux-App/react-redux-app/src/store/reducers/quotesReducer.js"],"names":["initialState","quote","isFetching","error","author","quotesReducer","state","action","type","console","log","payload","ranNum","Math","floor","random","data","en"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,UAAU,EAAE,KAFK;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,MAAM,EAAE;AAJS,CAArB;AAOE,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELJ,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAK,qBAAL;AACEO,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BH,MAAM,CAACI,OAApC;AACA,YAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe,MAAI,CAAnB,CAAX,IAAoC,CAAnD;AACA,aAAO,EACL,GAAGT,KADE;AAELJ,QAAAA,UAAU,EAAE,KAFP;AAGLE,QAAAA,MAAM,EAAEG,MAAM,CAACI,OAAP,CAAeK,IAAf,CAAoBJ,MAApB,EAA4BR,MAH/B;AAILH,QAAAA,KAAK,EAAEM,MAAM,CAACI,OAAP,CAAeK,IAAf,CAAoBJ,MAApB,EAA4BK,EAJ9B;AAKLd,QAAAA,KAAK,EAAE;AALF,OAAP;;AAOF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELJ,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,KAAK,EAAEI,MAAM,CAACI;AAHT,OAAP;;AAKF;AACE,aAAOL,KAAP;AAvBJ;AAyBD,CA1BM","sourcesContent":["const initialState = {\n    quote: '',\n    isFetching: false,\n    error: '',\n    author: ''\n  };\n  \n  export const quotesReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'FETCH_QUOTE_START':\n        return {\n          ...state,\n          isFetching: true\n        };\n      case 'FETCH_QUOTE_SUCCESS':\n        console.log(\"action.payload\",action.payload)\n        const ranNum = Math.floor(Math.random()*(500-0)) + 0;\n        return {\n          ...state,\n          isFetching: false,\n          author: action.payload.data[ranNum].author ,\n          quote: action.payload.data[ranNum].en,\n          error: ''\n        };\n      case 'FETCH_QUOTE_FAILURE':\n        return {\n          ...state,\n          isFetching: false,\n          error: action.payload\n        };\n      default:\n        return state;\n    }\n  };\n  "]},"metadata":{},"sourceType":"module"}